<img src="http://img.skitch.com/20081215-npfqcdn77e1qjhwu8nikehcxjb.jpg" alt="Momentum" style="float:right" />

h1. Momentum

Momentum is a simple time tracking application currently focused on OSX. 
The goal of the application is two-fold:

  * Track the active application whenever you are using your computer
  * Track the focus of six minute time increments for billing purposes 
  
This inherently involves tracking the amount of idle time while any 
application is active. Eventually there will be statistics, reports and
graphs, and possibly modes which allow you to self assign task-masters.

h2. Todo

  * Save data from the interval interface (and ignore and use last)
  * Confirm save
  * Intervals onchange to force ordered entry
  * Intervals onchange to update chart
  * Autocomplete categories
  * Current chart shows entire history
  * Make the idle checkbox callback (or build in both urls)
  * Last category display is defulted
  * Complete History page
  * Complete Activities page
  * Complete Configure page
  * Complete About page
  * More stats
  * Daemon mode
  * Default packaging of fluid instance
  * Growl

h2. Getting started

Copy the existing config examples for config/database.yml and config/momentum.yml
to their corresponding files. Once complete, run:

  rake db:migrate
  
If you want to run the tests
 
  rake db:migrate RAILS_ENV=test

At this point it is helpful to have a User record associated with your currently
logged in user. It isn't necessary though. If you want one, run:

  script/runner "User.create(:login => '`whoami`')"

To run the application execute:
  
  script/momentum

You will not see anything until you switch the front most application. If you 
do not specify verbose: true in the momentum config then you will never see
anything. 

The interface is just a web application, it can be viewed by running script/server.
The sample interface image above shows the application in a Fluid.app window with
the opacity set. 
    
h2. Fixes

* No more global variables
* Trapping SIGINT for clean exit
* Rewrite osa so that all variables are collected in the same call (no conflict)
* Add configuration support
* Idle timing fixed
* Handling exceptions in the osa now (script even longer!)
* First phase of application hotness